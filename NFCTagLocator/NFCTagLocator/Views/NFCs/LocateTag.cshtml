@model IEnumerable<NFCTagLocator.Models.NFC>

@{
    ViewBag.Title = "LocateTag";
}


<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
    <title></title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

    <script type="text/javascript" src="http://ecn.dev.virtualearth.net/mapcontrol/mapcontrol.ashx?v=7.0"></script>

    <script type="text/javascript">

        var map = null;
        var displayAlert;

        function loadTrafficModule()
        {
            Microsoft.Maps.loadModule('Microsoft.Maps.Traffic', { callback: trafficModuleLoaded });
        }
        
        // Load the traffic module
        function trafficModuleLoaded()
        {
            displayAlert('Traffic Module Loaded')
        }
        Microsoft.Maps.loadModule('Microsoft.Maps.Traffic', { callback: trafficModuleLoaded });

        function GetMap() {
            // Initialize the map
            map = new Microsoft.Maps.Map(document.getElementById("mapDiv"), {
                credentials: "AlCwJKeo1G8Dd7xSR7HJPID3lLyGL0dWRzLT4w0Hy904JTfDTXzU3D6yBv7vhUWC",
                center: new Microsoft.Maps.Location(53.27642, -6.36016),
                mapTypeId: Microsoft.Maps.MapTypeId.road,
                zoom: 7
            });

            // Load the traffic module
            function trafficModuleLoaded() {
                displayAlert('Traffic Module Loaded')
            }
            Microsoft.Maps.loadModule('Microsoft.Maps.Traffic', { callback: trafficModuleLoaded });

        }
        
        function ClickRoute(credentials)
        {
            map.getCredentials(MakeRouteRequest);
        }


        function MakeRouteRequest(credentials)
        {
            var routeRequest = "http://dev.virtualearth.net/REST/v1/Routes?wp.0=" + document.getElementById('txtStart').value + "&wp.1=" + document.getElementById('txtEnd').value + "&routePathOutput=Points&output=json&jsonp=RouteCallback&key=" + credentials;

            CallRestService(routeRequest);
        }

        function RouteCallback(result)
        {
            if (result &&
                  result.resourceSets &&
                  result.resourceSets.length > 0 &&
                  result.resourceSets[0].resources &&
                  result.resourceSets[0].resources.length > 0)
                {
                 
                // Set the map view
                var bbox = result.resourceSets[0].resources[0].bbox;
                var viewBoundaries = Microsoft.Maps.LocationRect.fromLocations(new Microsoft.Maps.Location(bbox[0], bbox[1]), new Microsoft.Maps.Location(bbox[2], bbox[3]));
                map.setView({ bounds: viewBoundaries });
                
                // Draw the route
                var routeline = result.resourceSets[0].resources[0].routePath.line;
                var routepoints = new Array();

                for (var i = 0; i < routeline.coordinates.length; i++)
                {
                    routepoints[i] = new Microsoft.Maps.Location(routeline.coordinates[i][0], routeline.coordinates[i][1]);
                }

                // Draw the route on the map
                var routeshape = new Microsoft.Maps.Polyline(routepoints, { strokeColor: new Microsoft.Maps.Color(200, 0, 0, 200) });
                map.entities.push(routeshape);
            }
        }
        
        function CallRestService(request)
        {
            var script = document.createElement("script");
            script.setAttribute("type", "text/javascript");
            script.setAttribute("src", request);
            document.body.appendChild(script);
        }

        function getCurrentLocation()
        {
            var geoLocationProvider = new Microsoft.Maps.GeoLocationProvider(map);
            geoLocationProvider.getCurrentPosition({ successCallback: successCallback });
        }

        function successCallback(object)
        {
            alert('Success callback invoked, current map center ' + object.center);
        }

    </script>
</head>
<body onload="GetMap();">
    <div id='mapDiv' style="position:relative; width:600px; height:400px;"></div>
    <input id="txtStart" type="text" value="Tallaght" />
    <input id="txtEnd" type="text" value="Clondalkin" />
    <input type="button" value="Calculate Route" onclick="ClickRoute()" />
    <div><input type="button" value="GetCurrentLocation" onclick="getCurrentLocation();" /></div>
    <div><input type="button" value="LoadTrafficModule" onclick="loadTrafficModule();" /></div>
    <div id='output'> </div> 
</body>
</html>






